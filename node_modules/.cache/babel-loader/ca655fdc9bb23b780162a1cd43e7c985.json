{"ast":null,"code":"var _jsxFileName = \"/Users/mstars_lab2_07/Desktop/scoreboard-class-2/src/components/Stopwatch.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Stopwatch extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isRunning: false,\n      time: 0\n    };\n\n    this.tick = () => {\n      if (this.state.isRunning) {\n        this.setState(prevState => ({\n          time: prevState.time += 1\n        }));\n      }\n    };\n\n    this.handleStopwatch = () => {\n      this.setState(prevState => ({\n        isRunning: !prevState.isRunning\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => this.tick(), 100);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stopwatch\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Stopwatch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"stopwatch-time\",\n        children: this.state.time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleStopwatch,\n        children: this.state.isRunning ? 'Stop' : 'Start'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Stopwatch;","map":{"version":3,"sources":["/Users/mstars_lab2_07/Desktop/scoreboard-class-2/src/components/Stopwatch.js"],"names":["React","Stopwatch","Component","state","isRunning","time","tick","setState","prevState","handleStopwatch","componentDidMount","intervalID","setInterval","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEpCC,KAFoC,GAE5B;AACJC,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,IAAI,EAAE;AAFF,KAF4B;;AAAA,SAUpCC,IAVoC,GAU7B,MAAM;AACT,UAAG,KAAKH,KAAL,CAAWC,SAAd,EAAwB;AACpB,aAAKG,QAAL,CAAcC,SAAS,KAAK;AACxBH,UAAAA,IAAI,EAAEG,SAAS,CAACH,IAAV,IAAkB;AADA,SAAL,CAAvB;AAGH;AACJ,KAhBmC;;AAAA,SAkBpCI,eAlBoC,GAkBlB,MAAK;AACnB,WAAKF,QAAL,CAAcC,SAAS,KAAK;AACxBJ,QAAAA,SAAS,EAAE,CAACI,SAAS,CAACJ;AADE,OAAL,CAAvB;AAGH,KAtBmC;AAAA;;AAOpCM,EAAAA,iBAAiB,GAAE;AACf,SAAKC,UAAL,GAAkBC,WAAW,CAAE,MAAK,KAAKN,IAAL,EAAP,EAAoB,GAApB,CAA7B;AACH;;AAcDO,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA,kBAAkC,KAAKV,KAAL,CAAWE;AAA7C;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAE,KAAKI,eAAtB;AAAA,kBACK,KAAKN,KAAL,CAAWC,SAAX,GAAuB,MAAvB,GAAgC;AADrC;AAAA;AAAA;AAAA;AAAA,cAHJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAlCmC;;AAqCxC,eAAeH,SAAf","sourcesContent":["import React from 'react'\n\nclass Stopwatch extends React.Component {\n\n    state = {\n        isRunning: false,\n        time: 0\n    }\n\n    componentDidMount(){\n        this.intervalID = setInterval( ()=> this.tick(), 100)\n    }\n    tick = () => {\n        if(this.state.isRunning){\n            this.setState(prevState => ({\n                time: prevState.time += 1\n            }))\n        }\n    }\n\n    handleStopwatch = () =>{\n        this.setState(prevState => ({\n            isRunning: !prevState.isRunning\n        }))\n    }\n    render(){\n        return(\n            <div className=\"stopwatch\">\n                <h2>Stopwatch</h2>\n                <span className='stopwatch-time'>{this.state.time}</span>\n                <button onClick={this.handleStopwatch}>\n                    {this.state.isRunning ? 'Stop' : 'Start'}\n                </button>\n                <button>Reset</button>\n            </div>\n        )\n    }\n}\n\nexport default Stopwatch"]},"metadata":{},"sourceType":"module"}