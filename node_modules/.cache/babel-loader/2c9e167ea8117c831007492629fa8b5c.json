{"ast":null,"code":"var _jsxFileName = \"/Users/mstars_lab2_07/Desktop/scoreboard-class-2/src/components/Counter.js\";\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends React.Component {\n  maxFinder() {\n    const arr = this.state.players.map(e => {\n      return e.score;\n    }); //    arr = props.score\n    //   console.log(arr)\n    //   console.log(props.score)\n\n    const max = Math.max(...arr);\n    let arrMax1 = [];\n\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i] == max) {\n        arrMax1.push(i);\n      }\n    }\n\n    console.log(arrMax1);\n    this.setState({\n      arrMax: arrMax1\n    });\n    console.log(this.state.arrMax); //   console.log(arrMax1);\n    //   console.log(max);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"counter-action dicrement\",\n        onClick: () => this.props.changeScore(-1, this.props.index),\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"counter-score\",\n        children: this.props.score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"counter-action increment\",\n        onClick: () => this.props.changeScore(1, this.props.index),\n        children: \" + \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nCounter.propTypes = {\n  index: propTypes.number,\n  // score: propTypes.number,\n  changeScore: propTypes.func\n};\nexport default Counter;","map":{"version":3,"sources":["/Users/mstars_lab2_07/Desktop/scoreboard-class-2/src/components/Counter.js"],"names":["React","propTypes","Counter","Component","maxFinder","arr","state","players","map","e","score","max","Math","arrMax1","i","length","push","console","log","setState","arrMax","render","props","changeScore","index","number","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AAElCC,EAAAA,SAAS,GAAE;AACP,UAAMC,GAAG,GAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAwBC,CAAD,IAAK;AAAC,aAAOA,CAAC,CAACC,KAAT;AAAe,KAA5C,CAAZ,CADO,CAET;AACA;AACA;;AACE,UAAMC,GAAG,GAAGC,IAAI,CAACD,GAAL,CAAS,GAAGN,GAAZ,CAAZ;AACA,QAAIQ,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACT,GAAG,CAACU,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC3B,UAAGT,GAAG,CAACS,CAAD,CAAH,IAAQH,GAAX,EAAe;AACXE,QAAAA,OAAO,CAACG,IAAR,CAAaF,CAAb;AACD;AACJ;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,SAAKM,QAAL,CAAc;AACVC,MAAAA,MAAM,EAAEP;AADE,KAAd;AAGFI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWc,MAAvB,EAhBO,CAiBT;AACA;AAED;;AAGDC,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACQ;AAAQ,QAAA,SAAS,EAAC,0BAAlB;AAA6C,QAAA,OAAO,EAAE,MAAI,KAAKC,KAAL,CAAWC,WAAX,CAAuB,CAAC,CAAxB,EAA2B,KAAKD,KAAL,CAAWE,KAAtC,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,eAEQ;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA,kBAAkC,KAAKF,KAAL,CAAWZ;AAA7C;AAAA;AAAA;AAAA;AAAA,cAFR,eAGQ;AAAQ,QAAA,SAAS,EAAC,0BAAlB;AAA6C,QAAA,OAAO,EAAE,MAAI,KAAKY,KAAL,CAAWC,WAAX,CAAuB,CAAvB,EAA0B,KAAKD,KAAL,CAAWE,KAArC,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAlCiC;;AAsCtCtB,OAAO,CAACD,SAAR,GAAoB;AAChBuB,EAAAA,KAAK,EAAEvB,SAAS,CAACwB,MADD;AAEhB;AACAF,EAAAA,WAAW,EAAEtB,SAAS,CAACyB;AAHP,CAApB;AAMA,eAAexB,OAAf","sourcesContent":["import React from 'react'\nimport propTypes from 'prop-types'\n\nclass Counter extends React.Component {\n\n    maxFinder(){\n        const arr = this.state.players.map((e)=>{return e.score});\n      //    arr = props.score\n      //   console.log(arr)\n      //   console.log(props.score)\n        const max = Math.max(...arr);\n        let arrMax1 = [];\n        for (let i=0; i<arr.length;i++){\n            if(arr[i]==max){\n                arrMax1.push(i)\n              }\n          }\n          console.log(arrMax1)\n          this.setState({\n              arrMax: arrMax1\n          })\n        console.log(this.state.arrMax);\n      //   console.log(arrMax1);\n      //   console.log(max);\n        \n    }\n\n\n    render (){\n\n        return(\n            <div className='counter'>\n                    <button className=\"counter-action dicrement\" onClick={()=>this.props.changeScore(-1, this.props.index)}>-</button>\n                    <span className='counter-score'>{ this.props.score }</span>\n                    <button className=\"counter-action increment\" onClick={()=>this.props.changeScore(1, this.props.index)}> + </button>\n                </div>\n        )\n    }\n\n}\n\nCounter.propTypes = {\n    index: propTypes.number,\n    // score: propTypes.number,\n    changeScore: propTypes.func\n}\n\nexport default Counter"]},"metadata":{},"sourceType":"module"}