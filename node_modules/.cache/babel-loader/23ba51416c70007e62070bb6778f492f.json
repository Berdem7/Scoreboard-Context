{"ast":null,"code":"var _jsxFileName = \"/Users/mstars_lab2_07/Desktop/scoreboard-class-2/src/App.js\";\nimport React from 'react';\nimport Player from './components/Player';\nimport Header from './components/Header';\nimport AddPlayer from './components/AddPlayer';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      players: [{\n        name: 'Enkhtuvshin',\n        score: 0,\n        id: 1\n      }, {\n        name: 'Dulam',\n        score: 0,\n        id: 2\n      }, {\n        name: 'Jambal',\n        score: 0,\n        id: 3\n      }, {\n        name: 'Jambal1',\n        score: 0,\n        id: 4\n      }, {\n        name: 'Jambal2',\n        score: 0,\n        id: 5\n      }],\n      arrMax: 0\n    };\n    this.lastPlayerID = this.state.players.length - 1;\n    this.playersId = this.state.players[this.lastPlayerID].id;\n\n    this.changeScore = (delta, index) => {\n      this.setState(prevState => {\n        const updatedPlayers = [...prevState.players];\n        const updatedPlayer = { ...updatedPlayers[index]\n        };\n        updatedPlayer.score += delta;\n        updatedPlayers[index] = updatedPlayer;\n        return {\n          players: updatedPlayers\n        };\n      });\n      this.maxFinder(); // console.log(this.state.arrMax)\n    };\n\n    this.removePlayer = paraID => {\n      this.setState(prevState => {\n        return {\n          players: prevState.players.filter(p => p.id != paraID)\n        };\n      });\n    };\n\n    this.handleAddPlayer = name => {\n      this.setState({\n        players: [...this.state.players, {\n          name: name,\n          score: 0,\n          id: this.playersId += 1\n        }]\n      });\n    };\n  }\n\n  //  \n  componentDidUpdate() {\n    this.maxFinder();\n  }\n\n  maxFinder() {\n    const arr = this.state.players.map(e => {\n      return e.score;\n    }); //    arr = props.score\n    //   console.log(arr)\n    //   console.log(props.score)\n\n    const max = Math.max(...arr);\n    let arrMax1 = [];\n\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i] == max) {\n        arrMax1.push(i);\n      }\n    } // console.log(arrMax1)\n\n\n    this.setState({\n      arrMax: max\n    });\n    console.log(this.state.arrMax); //   console.log(arrMax1);\n    //   console.log(max);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scoreboard\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"Scoreboard\",\n        totalPlayers: this.state.players.length,\n        players: this.state.players\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }, this), this.state.players.map((player, index) => /*#__PURE__*/_jsxDEV(Player, {\n        max: this.state.arrMax == player.score - 1 ? 1 : 0,\n        name: player.name,\n        score: player.score,\n        id: player.id,\n        index: index,\n        removePlayer: this.removePlayer,\n        changeScore: this.changeScore\n      }, player.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }, this)), /*#__PURE__*/_jsxDEV(AddPlayer, {\n        addPlayer: this.handleAddPlayer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\n{\n  /* <Player arr={this.arrMax} /> */\n}\nexport default App;","map":{"version":3,"sources":["/Users/mstars_lab2_07/Desktop/scoreboard-class-2/src/App.js"],"names":["React","Player","Header","AddPlayer","App","Component","state","players","name","score","id","arrMax","lastPlayerID","length","playersId","changeScore","delta","index","setState","prevState","updatedPlayers","updatedPlayer","maxFinder","removePlayer","paraID","filter","p","handleAddPlayer","componentDidUpdate","arr","map","e","max","Math","arrMax1","i","push","console","log","render","player"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAE/BC,KAF+B,GAEvB;AACJC,MAAAA,OAAO,EAAE,CACL;AACIC,QAAAA,IAAI,EAAE,aADV;AAEIC,QAAAA,KAAK,EAAE,CAFX;AAGIC,QAAAA,EAAE,EAAE;AAHR,OADK,EAML;AACIF,QAAAA,IAAI,EAAE,OADV;AAEIC,QAAAA,KAAK,EAAE,CAFX;AAGIC,QAAAA,EAAE,EAAE;AAHR,OANK,EAWL;AACIF,QAAAA,IAAI,EAAE,QADV;AAEIC,QAAAA,KAAK,EAAE,CAFX;AAGIC,QAAAA,EAAE,EAAE;AAHR,OAXK,EAgBL;AACIF,QAAAA,IAAI,EAAE,SADV;AAEIC,QAAAA,KAAK,EAAE,CAFX;AAGIC,QAAAA,EAAE,EAAE;AAHR,OAhBK,EAqBL;AACIF,QAAAA,IAAI,EAAE,SADV;AAEIC,QAAAA,KAAK,EAAE,CAFX;AAGIC,QAAAA,EAAE,EAAE;AAHR,OArBK,CADL;AA4BJC,MAAAA,MAAM,EAAC;AA5BH,KAFuB;AAAA,SA6D/BC,YA7D+B,GA6DhB,KAAKN,KAAL,CAAWC,OAAX,CAAmBM,MAAnB,GAA4B,CA7DZ;AAAA,SA8D/BC,SA9D+B,GA8DnB,KAAKR,KAAL,CAAWC,OAAX,CAAmB,KAAKK,YAAxB,EAAsCF,EA9DnB;;AAAA,SAgE/BK,WAhE+B,GAgEjB,CAACC,KAAD,EAAQC,KAAR,KAAiB;AAC7B,WAAKC,QAAL,CAAeC,SAAS,IAAI;AAC1B,cAAMC,cAAc,GAAG,CAAC,GAAGD,SAAS,CAACZ,OAAd,CAAvB;AACA,cAAMc,aAAa,GAAG,EAAC,GAAGD,cAAc,CAACH,KAAD;AAAlB,SAAtB;AAEAI,QAAAA,aAAa,CAACZ,KAAd,IAAuBO,KAAvB;AAEAI,QAAAA,cAAc,CAACH,KAAD,CAAd,GAAwBI,aAAxB;AAEA,eAAO;AACLd,UAAAA,OAAO,EAAEa;AADJ,SAAP;AAGD,OAXD;AAYA,WAAKE,SAAL,GAb6B,CAc7B;AACD,KA/E8B;;AAAA,SAiF/BC,YAjF+B,GAiFfC,MAAD,IAAY;AACvB,WAAKN,QAAL,CAAeC,SAAS,IAAI;AACxB,eAAO;AACHZ,UAAAA,OAAO,EAAEY,SAAS,CAACZ,OAAV,CAAkBkB,MAAlB,CAAyBC,CAAC,IAAIA,CAAC,CAAChB,EAAF,IAAQc,MAAtC;AADN,SAAP;AAGH,OAJD;AAKH,KAvF8B;;AAAA,SAyF/BG,eAzF+B,GAyFZnB,IAAD,IAAU;AAC1B,WAAKU,QAAL,CAAc;AACVX,QAAAA,OAAO,EAAE,CACL,GAAG,KAAKD,KAAL,CAAWC,OADT,EAEL;AACIC,UAAAA,IAAI,EAAEA,IADV;AAEIC,UAAAA,KAAK,EAAE,CAFX;AAGIC,UAAAA,EAAE,EAAE,KAAKI,SAAL,IAAkB;AAH1B,SAFK;AADC,OAAd;AAUD,KApG8B;AAAA;;AAiCjC;AACAc,EAAAA,kBAAkB,GAAE;AAChB,SAAKN,SAAL;AACH;;AAECA,EAAAA,SAAS,GAAE;AACP,UAAMO,GAAG,GAAG,KAAKvB,KAAL,CAAWC,OAAX,CAAmBuB,GAAnB,CAAwBC,CAAD,IAAK;AAAC,aAAOA,CAAC,CAACtB,KAAT;AAAe,KAA5C,CAAZ,CADO,CAET;AACA;AACA;;AACE,UAAMuB,GAAG,GAAGC,IAAI,CAACD,GAAL,CAAS,GAAGH,GAAZ,CAAZ;AACA,QAAIK,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACN,GAAG,CAAChB,MAApB,EAA2BsB,CAAC,EAA5B,EAA+B;AAC3B,UAAGN,GAAG,CAACM,CAAD,CAAH,IAAQH,GAAX,EAAe;AACXE,QAAAA,OAAO,CAACE,IAAR,CAAaD,CAAb;AACD;AACJ,KAXI,CAYL;;;AACA,SAAKjB,QAAL,CAAc;AACVP,MAAAA,MAAM,EAAEqB;AADE,KAAd;AAGFK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhC,KAAL,CAAWK,MAAvB,EAhBO,CAiBT;AACA;AAED;;AA4CD4B,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BAEI,QAAC,MAAD;AACI,QAAA,KAAK,EAAC,YADV;AAEI,QAAA,YAAY,EAAE,KAAKjC,KAAL,CAAWC,OAAX,CAAmBM,MAFrC;AAGI,QAAA,OAAO,EAAE,KAAKP,KAAL,CAAWC;AAHxB;AAAA;AAAA;AAAA;AAAA,cAFJ,EAOK,KAAKD,KAAL,CAAWC,OAAX,CAAmBuB,GAAnB,CAAwB,CAACU,MAAD,EAASvB,KAAT,kBACrB,QAAC,MAAD;AACM,QAAA,GAAG,EAAG,KAAKX,KAAL,CAAWK,MAAX,IAAmB6B,MAAM,CAAC/B,KAAP,GAAa,CAAhC,GAAoC,CAApC,GAAwC,CADpD;AAEI,QAAA,IAAI,EAAE+B,MAAM,CAAChC,IAFjB;AAGI,QAAA,KAAK,EAAEgC,MAAM,CAAC/B,KAHlB;AAKI,QAAA,EAAE,EAAG+B,MAAM,CAAC9B,EALhB;AAMI,QAAA,KAAK,EAAIO,KANb;AAOI,QAAA,YAAY,EAAI,KAAKM,YAPzB;AAQI,QAAA,WAAW,EAAI,KAAKR;AARxB,SAISyB,MAAM,CAAC9B,EAJhB;AAAA;AAAA;AAAA;AAAA,cADH,CAPL,eAmBM,QAAC,SAAD;AAAW,QAAA,SAAS,EAAE,KAAKiB;AAA3B;AAAA;AAAA;AAAA;AAAA,cAnBN;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAuBH;;AA9H8B;;AAgIjC;AAAC;AAAmC;AAEpC,eAAevB,GAAf","sourcesContent":["import React from 'react'\nimport Player from './components/Player'\nimport Header from './components/Header'\nimport AddPlayer from './components/AddPlayer'\nimport './App.css';\n\nclass App extends React.Component{\n  \n  state = {\n      players: [\n          {\n              name: 'Enkhtuvshin',\n              score: 0,\n              id: 1\n          },\n          {\n              name: 'Dulam',\n              score: 0,\n              id: 2\n          },\n          {\n              name: 'Jambal',\n              score: 0,\n              id: 3\n          },\n          {\n              name: 'Jambal1',\n              score: 0,\n              id: 4\n          },\n          {\n              name: 'Jambal2',\n              score: 0,\n              id: 5\n          }\n      ],\n      arrMax:0\n  }\n\n//  \ncomponentDidUpdate(){\n    this.maxFinder()\n}\n\n  maxFinder(){\n      const arr = this.state.players.map((e)=>{return e.score});\n    //    arr = props.score\n    //   console.log(arr)\n    //   console.log(props.score)\n      const max = Math.max(...arr);\n      let arrMax1 = [];\n      for (let i=0; i<arr.length;i++){\n          if(arr[i]==max){\n              arrMax1.push(i)\n            }\n        }\n        // console.log(arrMax1)\n        this.setState({\n            arrMax: max\n        })\n      console.log(this.state.arrMax);\n    //   console.log(arrMax1);\n    //   console.log(max);\n      \n  }\n\n\n  lastPlayerID = this.state.players.length - 1\n  playersId = this.state.players[this.lastPlayerID].id\n\n  changeScore = (delta, index)=> {\n    this.setState( prevState => {\n      const updatedPlayers = [...prevState.players]\n      const updatedPlayer = {...updatedPlayers[index]}\n\n      updatedPlayer.score += delta\n      \n      updatedPlayers[index] = updatedPlayer\n\n      return {\n        players: updatedPlayers\n      }\n    } )\n    this.maxFinder()\n    // console.log(this.state.arrMax)\n  }\n\n  removePlayer = (paraID) => {\n      this.setState( prevState => {\n          return {\n              players: prevState.players.filter(p => p.id != paraID)\n          }\n      })\n  }\n\n  handleAddPlayer = (name) => {\n    this.setState({\n        players: [\n            ...this.state.players,\n            {\n                name: name,\n                score: 0,\n                id: this.playersId += 1\n            }\n        ]\n    })\n  }\n\n  render(){\n      return(\n          <div className=\"scoreboard\">\n  \n              <Header \n                  title='Scoreboard' \n                  totalPlayers={this.state.players.length} \n                  players={this.state.players}\n              />\n              {this.state.players.map( (player, index) =>\n                  <Player  \n                        max ={this.state.arrMax==player.score-1 ? 1 : 0}\n                      name={player.name} \n                      score={player.score}\n                      key={player.id}\n                      id= {player.id}\n                      index = {index}\n                      removePlayer = {this.removePlayer}\n                      changeScore = {this.changeScore}\n                  />\n                   )}\n                <AddPlayer addPlayer={this.handleAddPlayer} />\n          </div>\n      )\n  }\n}\n{/* <Player arr={this.arrMax} /> */}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}